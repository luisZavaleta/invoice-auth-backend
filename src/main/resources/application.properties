#MONGO Properties
spring.data.mongodb.username=luisz
spring.data.mongodb.password=omerta
spring.data.mongodb.database=invoice-auth
spring.data.mongodb.host=auth-db-mongo



#JWT Login Properties 
jwt.secret=luiszavaleta

#18_000 seconds = 5 hours
jwt.token.validity-in-seconds=18000



#KAFKA

spring.kafka.consumer.bootstrap-servers=35.175.69.121:9092
spring.kafka.consumer.group-id=group_id
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer


spring.kafka.producer.bootstrap-servers=35.175.69.121:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer



#EMAIL

spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=ZavaletaLM@gmail.com
spring.mail.password=zavajedi07

# Other properties
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000

# TLS , port 587
spring.mail.properties.mail.smtp.starttls.enable=true

#VERIFICATION MAIL PROPERTIES
mail.secret=mailsecretzavaleta
mail.token.duration=604800
mail.test_recipient=luixZavaleta@gmail.com
mail.test.activated=true
mail.server.address=http://localhost

mail.email-validation.subject=Facturachida.com is requesting e-mail verification.
mail.email-validation.text=Please validate your email in FacturaChida.com so you can use the app:





